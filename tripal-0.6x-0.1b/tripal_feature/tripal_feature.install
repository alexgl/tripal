<?php

/************************************************************************
*  Implementation of hook_install();
*/
function tripal_feature_install(){
  // create the module's data directory
  tripal_create_moddir('tripal_feature');

  // create the tables that correlate drupal nodes with chado 
  // features, organisms, etc....
  drupal_install_schema('tripal_feature');
  
  /* get the list of features 
  $previous_db = db_set_active('chado');  // use chado database
  db_query($db_sql);
  db_query($cvterm_sql);
  db_set_active($previous_db);  // now use drupal database
  */
}

/************************************************************************
* Implementation of hook_schema().
*/
function tripal_feature_schema() {
   $schema = tripal_feature_get_schemas();
   return $schema;
}
/************************************************************************
* Implementation of hook_uninstall()
*/
function tripal_feature_uninstall(){
   drupal_uninstall_schema('tripal_feature');

   // Get the list of nodes to remove
   $sql_lib_id = "SELECT nid, vid ".
                 "FROM node ".
                 "WHERE type='chado_feature'";
   $result = db_query($sql_lib_id);
   while ($node = db_fetch_object($result)) {
      node_delete($node);
   }
}

/************************************************************************
* This function simply defines all tables needed for the module to work
* correctly.  By putting the table definitions in a separate function we 
* can easily provide the entire list for hook_install or individual
* tables for an update.
*/
function tripal_feature_get_schemas (){  
  $schema = array();

  $schema['chado_feature'] = array(
      'fields' => array(
         'vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
         'nid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
         'feature_id' => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
         'sync_date' => array ('type' => 'int', 'not null' => FALSE, 'description' => 'UNIX integer sync date/time'),
      ),
      'indexes' => array(
         'feature_id' => array('feature_id')
       ),
      'unique keys' => array(
         'nid_vid' => array('nid','vid'),
         'vid' => array('vid')
      ),
      'primary key' => array('nid'),
  );

  return $schema;
}

