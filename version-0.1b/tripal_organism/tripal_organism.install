<?php

/*******************************************************************************
*  Implementation of hook_install();
*/
function tripal_organism_install(){

   // create the module's data directory
   tripal_create_moddir('tripal_organism');

   // create the tables that correlate drupal nodes with chado
   // features, organisms, etc....
   drupal_install_schema('tripal_organism');

   // Add the materialized view needed to count the features for the organism
   // Drop the MView table if it exists
   $previous_db = db_set_active('chado');
   if (db_table_exists('organism_feature_count')) {
      $sql = "DROP TABLE organism_feature_count";
      db_query($sql);
   }
   db_set_active($previous_db);
   // Create the MView
   tripal_add_mview('organism_feature_count','tripal_organism',
      'organism_feature_count',
      'organism_id integer, genus character varying(255), '.
      '  species character varying(255), '.
      '  common_name character varying(255), '.
		'  num_features integer, feature_type character varying(255)',
	   'organism_id,feature_type',
	   'SELECT O.organism_id, O.genus, O.species, O.common_name, '.
      '    count(F.feature_id) as num_features, '.
      '    CVT.name as feature_type '.
      'FROM Organism O '.
      '    INNER JOIN Feature F           ON O.Organism_id = F.organism_id '.
      '    INNER JOIN Cvterm CVT          ON F.type_id = CVT.cvterm_id '.
      'GROUP BY O.Organism_id, O.genus, O.species, O.common_name, CVT.name',
	   ''
   );
}

/*******************************************************************************
* Implementation of hook_schema().
*/
function tripal_organism_schema() {
   $schema = tripal_organism_get_schemas();
	return $schema;
}

/*******************************************************************************
* Implementation of hook_uninstall()
*/
function tripal_organism_uninstall(){
   drupal_uninstall_schema('tripal_organism');

	// remove the materialized view
	$sql = "SELECT * FROM {tripal_mviews} ".
          "WHERE name = 'organism_feature_count'";
   $mview = db_fetch_object(db_query($sql));
	if($mview){
	   tripal_mviews_action('delete',$mview->mview_id);
	}

   // Get the list of nodes to remove
   $sql_lib_id = "SELECT nid, vid ".
                 "FROM node ".
                 "WHERE type='chado_organism'";
   $result = db_query($sql_lib_id);
   while ($node = db_fetch_object($result)) {
      node_delete($node->nid);
   }
}


/************************************************************************
* This function simply defines all tables needed for the module to work
* correctly.  By putting the table definitions in a separate function we
* can easily provide the entire list for hook_install or individual
* tables for an update.
*/
function tripal_organism_get_schemas (){
  $schema = array();

  $schema['chado_organism'] = array(
      'fields' => array(
         'vid' => array(
            'type' => 'int',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'default' => 0
         ),
         'nid' => array(
            'type' => 'int',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'default' => 0
         ),
         'organism_id' => array(
            'type' => 'int',
            'not null' => TRUE,
            'default' => 0
         )
      ),
      'indexes' => array(
         'organism_id' => array('organism_id')
      ),
      'unique keys' => array(
         'nid_vid' => array('nid','vid'),
         'vid' => array('vid')
      ),
      'primary key' => array('nid'),
  );
  return $schema;
}
